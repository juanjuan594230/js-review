/* 
    \d  数字
    \w  数字、字母、_  [a-zA-Z0-9_]
    \s  特殊字符 空格、tab
    \W  !\w
    \S  !\s
    [abc] a || b || c
    [a-z] a-z的26个字母
    .   任意字符
    *   0次或更多
    +   1次或更多（最少一次）
    ？  0次或一次
    {min, max} 次数的范围
    {n} n次
    \b  单词的开始或结束
    ^   字符串的开始 || 一行的开始
    $   字符串的结束
    特殊字符不在[]之内需要转义  \.
*/

/* 
    匹配国内座机号的正则表达式 
    匹配3位区号或4位区号(开头为0)，可以加括号，也可以不加
    区号与本地号之间以-或空格相隔，也可以不相隔
*/
/* const exp1 = /0\d{2}[- ]?\d{8}|\(0\d{2}\)[- ]?\d{8}|0\d{3}[- ]?\d{7}|\(0\d{3}[- ]?\)\d{7}/g;
console.log('(010)-12345678hahahahhaha'.match(exp1)); */

/* 
    匹配国内手机号 
*/

/* const exp2 = /(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\d{8}/g;
console.log('hhshghdfg13500009999sfhcsjhnc13897896767jdscnj'.match(exp2)); */

/* 匹配国内身份证号码 */

/* const exp3 = /(?:1[1-5]|2[1-3]|3[1-7]|4[1-6]|5[0-4]|6[1-5])\d{4}(?:1[89]|20)\d{2}(?:0[1-9]|1[0-2])(?:0[1-9]|[12]\d|3[01])\d{3}(?:\d|[xX])$/g;

const exp4 = /(1[1-5]|2[1-3]|3[1-7]|4[1-6]|5[0-4]|6[1-5])\d{4}(18|19|20)\d{2}(0[1-9]|1[1-2])([012]\d|3[01])\d{3}(\d|x|X)/g;
console.log('wrref142303198906194521hcbdschjd37665518900231456x'.match(exp4)); */

/* 邮箱 */
const exp5 = /[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9-_]+)+/g;

